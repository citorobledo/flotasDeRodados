import Rodados.*
import Dependencias.*
import pedidos.*
test "flotaDeRodadosTest" {
// crear dependencias:
	var d1 = new Dependencia( empleados=45, nombre="Deportes")
	var d2 = new Dependencia( empleados=31, nombre="Cultura")
// rodados dependencia Deportes
	var cachito = new ChevroletCorsa(color="rojo")
	var r1 = new ChevroletCorsa(color = "azul")
	var r2 = new ChevroletCorsa(color ="verde")
	var r3 = new RenaultKwid(tanqueAdicional= true)
	var r4 = new AutosEspeciales(capacidad= 5, peso=1200, color="beige", velocidadMaxima=160)
// agregar rodados a deportes
	d1.agregarAFlota(cachito)
	 d1.agregarAFlota(r1)
	 d1.agregarAFlota(r2)
	 d1.agregarAFlota(r3)
	d1.agregarAFlota(r4)
// rodados cultura
	var r5 = new RenaultKwid(tanqueAdicional= true)
	var r6 = new RenaultKwid(tanqueAdicional= true)
	var r7 = new RenaultKwid(tanqueAdicional= false)
	var r8 =  trafic
	r8.interior(popular)
	r8.motor(bataton)
// AGREGAR RODADOS A CULURA
	d2.agregarAFlota(cachito)
	d2.agregarAFlota(r5)
	d2.agregarAFlota(r6)
	d2.agregarAFlota(r7)
	d2.agregarAFlota(r8)
		
// PRUEBAS 
//Para cada dependencia, hacer asserts sobre: el peso total de la flota,
	assert.that(d1.pesoTotalFlota( ) ==6450 )
	assert.that(d2.pesoTotalFlota()==10700 )
//si está o no bien equipada
	assert.that(d1.estaBienEquipada( ))
	assert.that(not d2.estaBienEquipada( ))
// la capacidad total en color azul
	assert.that(d1.capacidadTotalEnColor("azul") ==  7 )
	assert.that(d2.capacidadTotalEnColor("azul") == 10)
// el color del rodado más rápido
	assert.that(d1.colorDelRodadoMasRapido()== "beige")
	assert.that(d2.colorDelRodadoMasRapido()== "rojo")
// si es grande o no
	assert.that(d1.esGrande() )
	assert.that(not d2.esGrande() )
// la capacidad faltante.
	assert.that(d1.capacidadFaltante() == 25)
	assert.that( d2.capacidadFaltante() == 5)
// PEDIDOS
	const p1 = new Pedidos(distancia=960, tiempoMaximo= 8,  pasajeros=4)
	const p2 = new Pedidos(distancia=660, tiempoMaximo= 6, pasajeros=4)
	p1.agregarColor("azul")
	p1.agregarColor("negro")
// test pedidos
	assert.that(p1.velocidadRequerida() == 120 )
	assert.that( p1.puedeSatisfacerPedido(cachito))
	p1.agregarColor("rojo")
	assert.that(not p1.puedeSatisfacerPedido(cachito))
	 p1.tiempoMaximo( 6)
	assert.that(p1.velocidadRequerida() == 160)
	assert.that(not p1.puedeSatisfacerPedido(cachito))
	p1.acelerar()
	assert.that(p1.tiempoMaximo() == 5)
	p1.relajar()
	assert.that(p1.tiempoMaximo() ==6)
	
	//agregar pedido a dependencia
	d1.agregarPedido(p1)
	d1.agregarPedido(p2)
	assert.that(d1.pedidosNoSatisfechos().size() == 0)
	assert.that(not d1.colorIncompatibleParaTodos("rojo"))
	d1.relajarPedidos()
	assert.that(p1.tiempoMaximo()== 7)
	assert.that(p2.tiempoMaximo()== 7)
}